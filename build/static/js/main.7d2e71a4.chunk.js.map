{"version":3,"sources":["components/Home.js","components/Summary.js","components/Histogram.js","components/Linechart.js","components/ScatterPlot.js","components/QueryResults.js","components/MinSearch.js","components/Search.js","App.js","index.js"],"names":["Home","query","setQuery","classes","useState","listingCount","setListingCount","lastUpdate","setLastUpdate","fetchMeta","event","a","axios","get","process","count","lastUD","data","useEffect","className","Container","Grid","container","spacing","item","id","xs","align","InputBase","label","type","variant","fullWidth","value","onChange","target","to","style","textDecoration","Button","color","onClick","alert","created","summaryStyle","fontFamily","Summary","React","memo","phones","execQuery","length","meanBy","Math","min","filter","p","price","map","max","Histogram","containerComponent","labels","datum","round","x","y","theme","VictoryTheme","material","height","animate","duration","axisLabelComponent","dy","dependentAxis","Linechart","pricedPhones","dateAxis","Date","time_stamp","prices","zip","dp","scale","ScatterPlot","b","getTime","now","Array","fill","listingAge","e","i","size","QueryResults","sm","Paper","paper","elevation","CircularProgress","MinSearch","fetchPhones","onSubmit","Search","setPhones","useHistory","useParams","preventDefault","res","useStyles","makeStyles","root","flexGrow","padding","textAlign","palette","text","primary","searchbar","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d2e71a4.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Container, Grid, Button } from '@material-ui/core';\nimport InputBase from '@material-ui/core/InputBase';\nimport { Link } from 'react-router-dom'\nimport SearchIcon from '@material-ui/icons/Search';\nimport '../Styles.css'\nimport axios from 'axios'\n\nconst Home = ({ query, setQuery, classes }) => {\n  const [listingCount, setListingCount] = useState(null)\n  const [lastUpdate, setLastUpdate] = useState(null)\n\n  const fetchMeta = async (event) => {\n    const count = await axios.get(`${process.env.REACT_APP_BASE_URL}/count`)\n    const lastUD = await axios.get(`${process.env.REACT_APP_BASE_URL}/lastinsert`)\n    setListingCount(count.data)\n    setLastUpdate(lastUD.data)\n  }\n\n  useEffect(() => {\n    setQuery('')\n    fetchMeta()\n  }, [])\n\n  return (\n    <div className='home__body'>\n      <Container>\n        <Grid container spacing={3}>\n          <Grid item id=\"search-label\" xs={12} align='center'>\n            <h1>Käytettyjen puhelinten hintatiedot</h1>\n            Kokeile esim. hakuja: \"Samsung\", \"Huawei\", \"iPhone\"\n          </Grid>\n          <Grid item xs={12} align='center'>\n            <form>\n              <div className='search__input'>\n                <SearchIcon />\n                <InputBase\n                  id=\"outlined-search\"\n                  label=\"Search\"\n                  type=\"search\"\n                  variant=\"outlined\"\n                  fullWidth\n                  value={query}\n                  onChange={event => setQuery(event.target.value)}\n                />\n              </div>\n              <br />\n              <div className='search__buttons'>\n                <Link to={`/search/${query}`} style={{ textDecoration: 'none'}}>\n                  <Button id=\"search-button\" variant=\"contained\" color=\"primary\" type=\"submit\">Search</Button>\n                </Link>\n                <Button id=\"some-button\" variant=\"contained\" color=\"primary\" onClick={() => alert('Move along, nothing to see here.')}>UselessFeature</Button>\n              </div>\n            </form>\n          </Grid>\n          <Grid item xs={12} align='center'>\n            {\n              (listingCount && lastUpdate) &&\n              <>Tietokannassa {listingCount} kohdetta, päivitetty viimeksi: {lastUpdate.created}</>\n            }\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  )\n}\n\nexport default Home;\n","import React from 'react'\r\nimport meanBy from 'lodash.meanby'\r\n\r\nconst summaryStyle = {\r\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\"\r\n}\r\n\r\nconst Summary = React.memo(({ phones, execQuery }) => {\r\n    if (!phones) {\r\n        return <div>Loading...</div>\r\n    }\r\n    return (\r\n        <div style={summaryStyle}>\r\n            <h3>Summary: {execQuery} </h3>\r\n            { phones.length >= 250\r\n                ? <p>Count: {phones.length}+</p>\r\n                : <p>Count: {phones.length}</p>\r\n            }\r\n            <p>Mean Price: {meanBy(phones, 'price')}</p>\r\n            <p>Min Price: {Math.min( ...phones.filter(p => p.price).map(p => p.price) )}</p>\r\n            <p>Max Price: {Math.max( ...phones.filter(p => p.price).map(p => p.price) )}</p>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Summary","import React from 'react'\r\nimport { VictoryChart, VictoryHistogram, VictoryVoronoiContainer, VictoryAxis, VictoryTheme, VictoryLabel } from 'victory' \r\n\r\nconst Histogram = ({ phones }) => {\r\n\r\n    if (!phones) {\r\n        return <div>Loading...</div>\r\n    }\r\n    \r\n    const labels = ({ datum }) => (\r\n        `${Math.round(datum.x, 2)}, ${Math.round(datum.y, 2)}`\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <VictoryChart \r\n                containerComponent={<VictoryVoronoiContainer labels={labels}/>}\r\n                theme={VictoryTheme.material}\r\n                height={250}\r\n                animate={{\r\n                    duration: 1500\r\n                  }}\r\n            >\r\n                <VictoryAxis label='Price (eur)' axisLabelComponent={<VictoryLabel dy={25} />}/>\r\n                <VictoryAxis dependentAxis />\r\n                <VictoryHistogram data={phones.map(p => ({x : p.price}) )}/>\r\n            </VictoryChart>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Histogram","import React from 'react'\r\nimport { VictoryChart, VictoryLine, VictoryVoronoiContainer, VictoryAxis, VictoryLabel, VictoryTheme } from 'victory'\r\nimport zip from 'lodash.zip'\r\n\r\nconst labels = ({ datum }) => (\r\n    `${Math.round(datum.x, 2)}, ${Math.round(datum.y, 2)}`\r\n)\r\n\r\nconst Linechart = ({ phones }) => {\r\n    if (!phones) {\r\n        return <div>Loading...</div>\r\n    }\r\n    const pricedPhones = phones.filter(p => p.price)\r\n    const dateAxis = pricedPhones.map(p => new Date(p.time_stamp))\r\n\r\n    const prices = pricedPhones.map(p => p.price)\r\n    const data = zip(dateAxis, prices).map(dp => ({x: dp[0], y: dp[1] }))\r\n\r\n    return (\r\n        <div>\r\n            <VictoryChart \r\n                scale={{ x: \"time\"}} \r\n                containerComponent={<VictoryVoronoiContainer labels={labels}/>}\r\n                theme={VictoryTheme.material}\r\n                height={250}\r\n                animate={{\r\n                    duration: 1500\r\n                  }}\r\n            >\r\n                <VictoryAxis label='Listing date' axisLabelComponent={<VictoryLabel dy={25} />}/>\r\n                <VictoryAxis dependentAxis />\r\n                <VictoryLine data={data}/>\r\n            </VictoryChart>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Linechart","import React from 'react'\r\nimport { VictoryChart, VictoryTheme, VictoryScatter, VictoryAxis, VictoryLabel } from 'victory'\r\nimport zip from 'lodash.zip'\r\n\r\nconst ScatterPlot = ({ phones }) => {\r\n    if (!phones) {\r\n        return <div>Loading...</div>\r\n    }\r\n    const pricedPhones = phones.filter(p => p.price)\r\n\r\n    const subtractVectors = (a,b) => {\r\n        return a.map((e,i) => e - b[i]);\r\n    }\r\n\r\n    //days since 1-1-1970\r\n    const dateAxis = pricedPhones.map(p => new Date(p.time_stamp).getTime() / 86400000)\r\n\r\n    const now = new Array(dateAxis.length).fill(new Date().getTime() / 86400000)\r\n    //time diff in days\r\n    const listingAge = subtractVectors(now, dateAxis)\r\n    const prices = pricedPhones.map(p => p.price)\r\n\r\n    const data = zip(listingAge, prices).map(dp => ({x: dp[0], y: dp[1] }))\r\n    \r\n    return <VictoryChart\r\n        theme={VictoryTheme.material}\r\n        height={250}\r\n     >\r\n      <VictoryAxis \r\n        label='Listing age (d)'\r\n        axisLabelComponent={<VictoryLabel dy={25} />}\r\n      />\r\n      <VictoryAxis dependentAxis /> \r\n\r\n      <VictoryScatter\r\n        size={2}\r\n        data={data}\r\n\r\n      />\r\n  </VictoryChart>\r\n}\r\n\r\nexport default ScatterPlot\r\n","import React from 'react'\r\nimport Summary from './Summary'\r\nimport Histogram from './Histogram'\r\nimport Linechart from './Linechart'\r\nimport ScatterPlot from './ScatterPlot'\r\nimport { Grid, Paper, CircularProgress } from '@material-ui/core'\r\n\r\nconst QueryResults = React.memo(({ classes, phones, execQuery }) => {\r\n  if (!phones) {\r\n    return <>\r\n      <Grid item xs={12}>\r\n        <CircularProgress />\r\n      </Grid>\r\n    </>\r\n  }\r\n  return (\r\n    <>\r\n      <Grid item sm={6} xs={12}>\r\n        <Paper className={classes.paper} elevation={3}>\r\n          <Summary phones={phones} execQuery={execQuery}/>\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12}>\r\n        <Paper className={classes.paper} elevation={3}>\r\n          <Histogram phones={phones} />\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12}>\r\n        <Paper className={classes.paper} elevation={3}>\r\n          <Linechart phones={phones} />\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item sm={6} xs={12}>\r\n        <Paper className={classes.paper} elevation={3}>\r\n          <ScatterPlot phones={phones} />\r\n        </Paper>\r\n      </Grid>\r\n    </>\r\n  )\r\n})\r\n\r\nexport default QueryResults\r\n","import React from 'react'\nimport '../Styles.css'\nimport { Grid, Button } from '@material-ui/core'\nimport { Link } from 'react-router-dom'\nimport InputBase from '@material-ui/core/InputBase';\n\nconst MinSearch = ({ query, setQuery, fetchPhones, phones }) => {\n  return (\n    <Grid item xs={12} align='left'>\n        <form onSubmit={fetchPhones}>\n        <span className='search__input__inline'>\n          <InputBase\n            id=\"outlined-search\"\n            label=\"Search\"\n            type=\"search\"\n            variant=\"outlined\"\n            value={query}\n            onChange={event => setQuery(event.target.value)}\n          />\n        </span>\n        <span className='search__buttons__inline'>\n          <Link to={`/search/${query}`} style={{ textDecoration: 'none'}}>\n            <Button id=\"search-button\" variant=\"contained\" color=\"primary\" type=\"submit\">Search</Button>\n          </Link>\n        </span>\n        </form>\n    </Grid>\n\n  )\n}\n\nexport default MinSearch","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport QueryResults from './QueryResults'\nimport { Container, Grid } from '@material-ui/core'\nimport MinSearch from './MinSearch'\nimport { useHistory, useParams } from 'react-router-dom'\n\nconst Search = ({ query, setQuery, classes }) => {\n  const [phones, setPhones] = useState(null)\n  const history = useHistory()\n  const execQuery = useParams().query\n\n  const fetchPhones = async (event) => {\n    //console.log(history)\n    if (event) {\n      event.preventDefault()\n    }\n    const res = await axios.get(`${process.env.REACT_APP_BASE_URL}/search/${execQuery}`)\n    setPhones(res.data)\n  }\n\n  useEffect(() => {\n    //console.log('fetching')\n    fetchPhones()\n    setQuery(execQuery)\n  }, [execQuery])\n\n  return (\n    <Container>\n      <Grid container spacing={3}>\n        <MinSearch query={query} setQuery={setQuery} phones={phones} fetchPhones={fetchPhones}/>\n        <QueryResults execQuery={execQuery} phones={phones} classes={classes} />\n      </Grid>\n    </Container>\n  )\n}\n\nexport default Search","import React, { useState } from 'react'\nimport Home from './components/Home'\nimport Search from './components/Search'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.primary,\n    height: '90%'\n  },\n  searchbar: {\n    align: 'center'\n  }\n}));\n\nconst App = () => {\n  const [query, setQuery] = useState('')\n  const classes = useStyles();\n\n  return (\n    <Router>\n    <Switch>\n      <Route path=\"/search/:query\">\n        <Search query={query} setQuery={setQuery} classes={classes} />\n      </Route>\n\n      <Route path=\"/\">\n        <Home query={query} setQuery={setQuery} classes={classes} />\n      </Route>\n    </Switch>\n  </Router>\n  )\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}